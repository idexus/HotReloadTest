//
// <auto-generated> Sharp.UI.Generator.Extensions.SharpBuilder
//

#nullable enable
#pragma warning disable CS8601


namespace HotReloadTestApp
{
    using Sharp.UI.Internal;
    using Sharp.UI;
    
    public static partial class MyViewModelExtension
    {
        public static T Counter<T>(this T self,
            int counter)
            where T : HotReloadTestApp.MyViewModel
        {
            self.SetValueOrAddSetter(HotReloadTestApp.MyViewModel.CounterProperty, counter);
            return self;
        }
        
        public static T Counter<T>(this T self, Func<PropertyContext<int>, IPropertyBuilder<int>> configure)
            where T : HotReloadTestApp.MyViewModel
        {
            var context = new PropertyContext<int>(self, HotReloadTestApp.MyViewModel.CounterProperty);
            configure(context).Build();
            return self;
        }
        
        public static T SliderValue<T>(this T self,
            double sliderValue)
            where T : HotReloadTestApp.MyViewModel
        {
            self.SetValueOrAddSetter(HotReloadTestApp.MyViewModel.SliderValueProperty, sliderValue);
            return self;
        }
        
        public static T SliderValue<T>(this T self, Func<PropertyContext<double>, IPropertyBuilder<double>> configure)
            where T : HotReloadTestApp.MyViewModel
        {
            var context = new PropertyContext<double>(self, HotReloadTestApp.MyViewModel.SliderValueProperty);
            configure(context).Build();
            return self;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
