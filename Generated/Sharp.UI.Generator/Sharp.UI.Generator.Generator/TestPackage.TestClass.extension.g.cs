//
// <auto-generated>
//

#pragma warning disable CS8669


namespace TestPackage
{
    using Sharp.UI;

    public static class TestClassGeneratedExtension
    {
        public static T Test<T>(this T obj,
            string? test)
            where T : TestPackage.TestClass
        {
            var mauiObject = MauiWrapper.Value<TestPackage.TestClass>(obj);
            if (test != null) mauiObject.SetValue(TestPackage.TestClass.TestProperty, (string)test);
            return obj;
        }
        
        public static T Test<T>(this T obj,
            string? test,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : TestPackage.TestClass
        {
            var mauiObject = MauiWrapper.Value<TestPackage.TestClass>(obj);         
            if (test != null) mauiObject.SetValue(TestPackage.TestClass.TestProperty, (string)test);
            var def = definition(new BindableDef<string>(mauiObject, TestPackage.TestClass.TestProperty));
            if (def.ValueIsSet()) mauiObject.SetValue(TestPackage.TestClass.TestProperty, def.GetValue());
            def.BindProperty();
            return obj;
        }
        
        public static T Test<T>(this T obj,
            System.Func<BindableDef<string>, BindableDef<string>> definition)
            where T : TestPackage.TestClass
        {
            var mauiObject = MauiWrapper.Value<TestPackage.TestClass>(obj);
            var def = definition(new BindableDef<string>(mauiObject, TestPackage.TestClass.TestProperty));
            if (def.ValueIsSet()) mauiObject.SetValue(TestPackage.TestClass.TestProperty, def.GetValue());
            def.BindProperty();
            return obj;
        }
        
    }
}


#pragma warning restore CS8669
