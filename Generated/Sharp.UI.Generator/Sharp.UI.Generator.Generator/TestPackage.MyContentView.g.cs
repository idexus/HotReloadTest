//
// <auto-generated>
//

#pragma warning disable CS8669


namespace TestPackage
{  
    using Sharp.UI;

    public partial class MyContentView
    {
        // ----- constructors -----

        public MyContentView(out MyContentView myContentView) : this()
        {
            myContentView = this;
        }

        public MyContentView(System.Action<MyContentView> configure) : this()
        {
            configure(this);
        }

        public MyContentView(out MyContentView myContentView, System.Action<MyContentView> configure) : this()
        {
            myContentView = this;
            configure(this);
        }

        // ----- bindable properties -----

        public static readonly Microsoft.Maui.Controls.BindableProperty LabelProperty =
            BindableProperty.Create(
                nameof(Label),
                typeof(string),
                typeof(TestPackage.MyContentView),
                default(string));

        public string Label
        {
            get => (string)GetValue(LabelProperty);
            set => SetValue(LabelProperty, value);
        }
        
        // ----- set value method -----

        public new void SetValue(Microsoft.Maui.Controls.BindableProperty property, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(property, mauiValue);
        }

        public new void SetValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey, object value)
        {
            var mauiValue = MauiWrapper.Value<object>(value);
            ((Microsoft.Maui.Controls.BindableObject)this).SetValue(propertyKey, mauiValue);
        }
    }
}

#pragma warning restore CS8669
